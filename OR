// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Or16.hdl

/**
 * 16-bit Or gate:
 * for i = 0..15:
 * out[i] = a[i] OR b[i]
 * Implementado con NOT, AND y NAND (ley de De Morgan)
 */

CHIP Or16 {
    IN a[16], b[16];
    OUT out[16];

    PARTS:
    // Bit 0
    Not(in=a[0], out=nota0);
    Not(in=b[0], out=notb0);
    And(a=nota0, b=notb0, out=and0);
    Not(in=and0, out=out[0]);

    // Bit 1
    Not(in=a[1], out=nota1);
    Not(in=b[1], out=notb1);
    And(a=nota1, b=notb1, out=and1);
    Not(in=and1, out=out[1]);

    // Bit 2
    Not(in=a[2], out=nota2);
    Not(in=b[2], out=notb2);
    And(a=nota2, b=notb2, out=and2);
    Not(in=and2, out=out[2]);

    // Bit 3
    Not(in=a[3], out=nota3);
    Not(in=b[3], out=notb3);
    And(a=nota3, b=notb3, out=and3);
    Not(in=and3, out=out[3]);

    // Bit 4
    Not(in=a[4], out=nota4);
    Not(in=b[4], out=notb4);
    And(a=nota4, b=notb4, out=and4);
    Not(in=and4, out=out[4]);

    // Bit 5
    Not(in=a[5], out=nota5);
    Not(in=b[5], out=notb5);
    And(a=nota5, b=notb5, out=and5);
    Not(in=and5, out=out[5]);

    // Bit 6
    Not(in=a[6], out=nota6);
    Not(in=b[6], out=notb6);
    And(a=nota6, b=notb6, out=and6);
    Not(in=and6, out=out[6]);

    // Bit 7
    Not(in=a[7], out=nota7);
    Not(in=b[7], out=notb7);
    And(a=nota7, b=notb7, out=and7);
    Not(in=and7, out=out[7]);

    // Bit 8
    Not(in=a[8], out=nota8);
    Not(in=b[8], out=notb8);
    And(a=nota8, b=notb8, out=and8);
    Not(in=and8, out=out[8]);

    // Bit 9
    Not(in=a[9], out=nota9);
    Not(in=b[9], out=notb9);
    And(a=nota9, b=notb9, out=and9);
    Not(in=and9, out=out[9]);

    // Bit 10
    Not(in=a[10], out=nota10);
    Not(in=b[10], out=notb10);
    And(a=nota10, b=notb10, out=and10);
    Not(in=and10, out=out[10]);

    // Bit 11
    Not(in=a[11], out=nota11);
    Not(in=b[11], out=notb11);
    And(a=nota11, b=notb11, out=and11);
    Not(in=and11, out=out[11]);

    // Bit 12
    Not(in=a[12], out=nota12);
    Not(in=b[12], out=notb12);
    And(a=nota12, b=notb12, out=and12);
    Not(in=and12, out=out[12]);

    // Bit 13
    Not(in=a[13], out=nota13);
    Not(in=b[13], out=notb13);
    And(a=nota13, b=notb13, out=and13);
    Not(in=and13, out=out[13]);

    // Bit 14
    Not(in=a[14], out=nota14);
    Not(in=b[14], out=notb14);
    And(a=nota14, b=notb14, out=and14);
    Not(in=and14, out=out[14]);

    // Bit 15
    Not(in=a[15], out=nota15);
    Not(in=b[15], out=notb15);
    And(a=nota15, b=notb15, out=and15);
    No
